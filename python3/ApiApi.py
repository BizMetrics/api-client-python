#!/usr/bin/env python
"""
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
"""
import sys
import os

from .models import *


class ApiApi(object):

    def __init__(self, apiClient):
      self.apiClient = apiClient

    

    def POST_controllers_api_Refunds$_createRefund(self, body, **kwargs):
        """In this method, one can create a refund for an existing Subscription

        Args:
            body, RefundBean: The refund representation in JSON of the refund to be created (required)

            

        Returns: 
        """

        allParams = ['body']

        params = locals()
        for (key, val) in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method POST_controllers_api_Refunds$_createRefund" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/api/refunds/{subsExtId}'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'POST'

        queryParams = {}
        headerParams = {}

        postData = (params['body'] if 'body' in params else None)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        

        

    def POST_controllers_api_Clients$_create(self, body, **kwargs):
        """This method creates a new Client

        Args:
            body, Client: The client representation in JSON of the client to be created (required)

            

        Returns: 
        """

        allParams = ['body']

        params = locals()
        for (key, val) in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method POST_controllers_api_Clients$_create" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/api/clients'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'POST'

        queryParams = {}
        headerParams = {}

        postData = (params['body'] if 'body' in params else None)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        

        

    def POST_controllers_api_Clients$_createFromArray(self, body, **kwargs):
        """It creates multiple new Clients from a JSON array

        Args:
            body, Client: The client representation in JSON of the client to be created (required)

            

        Returns: 
        """

        allParams = ['body']

        params = locals()
        for (key, val) in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method POST_controllers_api_Clients$_createFromArray" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/api/clients/jsonArray'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'POST'

        queryParams = {}
        headerParams = {}

        postData = (params['body'] if 'body' in params else None)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        

        

    def POST_controllers_api_Plans$_create(self, body, **kwargs):
        """This method creates a new Plan

        Args:
            body, Plan: The plan representation in JSON of the plan to be created (required)

            

        Returns: 
        """

        allParams = ['body']

        params = locals()
        for (key, val) in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method POST_controllers_api_Plans$_create" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/api/plans'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'POST'

        queryParams = {}
        headerParams = {}

        postData = (params['body'] if 'body' in params else None)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        

        

    def POST_controllers_api_Plans$_createFromArray(self, body, **kwargs):
        """This method creates multiple new Plans in a batch

        Args:
            body, Plan: The plan representation in JSON of the plan to be created (required)

            

        Returns: 
        """

        allParams = ['body']

        params = locals()
        for (key, val) in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method POST_controllers_api_Plans$_createFromArray" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/api/plans/jsonArray'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'POST'

        queryParams = {}
        headerParams = {}

        postData = (params['body'] if 'body' in params else None)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        

        

    def POST_controllers_api_Subscriptions$_createSubscription(self, body, **kwargs):
        """This method creates a new Subscription

        Args:
            body, Subscription: The subscription representation in JSON of the subscription to be created (required)

            

        Returns: 
        """

        allParams = ['body']

        params = locals()
        for (key, val) in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method POST_controllers_api_Subscriptions$_createSubscription" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/api/subscriptions'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'POST'

        queryParams = {}
        headerParams = {}

        postData = (params['body'] if 'body' in params else None)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        

        

    def PUT_controllers_api_Subscriptions$_changeStatus(self, body, **kwargs):
        """This method changes the status of an already created subscription

        Args:
            body, SubscriptionStatusChange: The subscription status representation in JSON of the new status (required)

            

        Returns: 
        """

        allParams = ['body']

        params = locals()
        for (key, val) in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method PUT_controllers_api_Subscriptions$_changeStatus" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/api/subscriptions/{extId}'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'PUT'

        queryParams = {}
        headerParams = {}

        postData = (params['body'] if 'body' in params else None)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        

        

    




